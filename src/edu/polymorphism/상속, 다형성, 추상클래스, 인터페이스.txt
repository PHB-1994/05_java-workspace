상속, 다형성, 추상클래스, 인터페이스.txt


상속 : - 필드 생성자 중점으로 만들어지는 클래스
       - 공통된 필드명칭을 사용
       - 부모 클래스에서 공통된 변수 생성자 메서드를 작성해서 자식 클래스에서 각 자식별로 개별 커스텀을 통해 사용

       일반 상속 같은 경우 - 상속받은 자식이 강제로 특정 메서드를 사용해야 할 이유가 없음

       추상클래스의 상속의 경우 - 필수로 작성해야하는 메서드가 존재.
                               - 필수로 작성하지 않아도 되는 메서드가 존재
                 abstract method 강제로 추후 기능을 작성해야하는 클래스의 경우
                            접근제한자       class 사이에 abstract 작성해야함

클래스 = 문서 필드를 작성할 수 있는 문서 {} 까지 포함된 완벽한 메서드를 작성할 수 있는 문서 파일

추상클래스 : - 메서드 중점으로 만들어지는 클래스
            - 필드 + 메서드로 작성


인터페이스 : - 필드 없이 메서드 명칭만 작성된 공간
            - 오직 메서드만 작성
            - 메서드에서 기능이 세부적으로 작성된 것이 아닌 기능의 명칭만 작성되어 있음

            - 필드 작성 불가, {}가 포함된 메서드를 작성할 수 없는 문서 파일
            - 오직 재사용해서 작성해야하는 메서드만 작성 가능!!!!!


다형성 : 부모 클래스를 기반으로 자식 클래스들의 기능이나 필드를 한 번에 코드를 단축하여 사용하는 행위



상속 여부와 관계없이

부모 클래스 내에 필수로 구현해야하는 기능까지 작성할 것인가?

부모 클래스와 구현해야하는 기능을 기능 문서에만 작성해서 사용할 것인가?

회사나 본인의 기준에 맞게
추상클래스로 한 번에 사용하겠다.

or

클래스 + 인터페이스 로 파일을 나누어 사용하겠다.

중 택 1개를 선택해서 많이 사용

대중적으로 많이 사용하는 것은?
클래스 + 인터페이스

추상클래스를 사용하는 경우 : 상속하는 부모 클래스는 추상 클래스 형태

인터페이스를 사용하는 경우 : 부모 클래스를 상속받는 자식 클래스는 구현해야하는 인터페이스까지 포함하는 형태

추상클래스 + 인터페이스를 사용하는 경우
-> 부모 클래스 - 자식 클래스에 필수로 작성해야하는 기능들 추가
                자식 클래스에서 다양한 자식들 중에 공통된 기능을 필수로 구현해야하는 경우 사용